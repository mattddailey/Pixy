services:
  redis:
    image: redis:bullseye
  flask:
    build:
      dockerfile: python.Dockerfile
    environment:
      BASE_URL: ${BASE_URL}
      FLASK_APP: flask_service.py
      FLASK_ENV: development
      FLASK_DEBUG: true
      PYTHONUNBUFFERED: 1
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
    volumes:
    - ./backend:/backend
    command: flask run -h 0.0.0.0
    ports: 
      - 5000:5000
    depends_on:
      - redis
  matrix:
    build:
        dockerfile: python.Dockerfile
    privileged: true
    environment:
      BASE_URL: ${BASE_URL}
      PYTHONUNBUFFERED: 1
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      WEATHER_LATITUDE: ${WEATHER_LATITUDE}
      WEATHER_LONGITUDE: ${WEATHER_LONGITUDE}
      WEATHER_APP_ID: ${WEATHER_APP_ID}
    volumes:
    - ./backend:/backend
    command: python3 -m redis_listener
    depends_on:
      - redis
  react:
    build:
      dockerfile: react.Dockerfile
    environment:
      REACT_APP_BASE_URL: ${BASE_URL}
    volumes:
    - ./frontend:/frontend
    command: npm start
    ports: 
    - 3000:3000
